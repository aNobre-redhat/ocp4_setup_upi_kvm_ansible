---
- name: Install LVM Storage and Configure LVMCluster
  hosts: localhost
  gather_facts: false
  become: true

  vars:
    extra_disks: "{{ extra_disks | default(0) | int }}"  # Garantir que seja sempre tratado como inteiro

  tasks:
    - name: Ensure openshift-storage namespace exists
      ansible.builtin.k8s:
        api_version: v1
        kind: Namespace
        metadata:
          name: openshift-storage
          labels:
            openshift.io/cluster-monitoring: "true"
            pod-security.kubernetes.io/enforce: privileged
            pod-security.kubernetes.io/audit: privileged
            pod-security.kubernetes.io/warn: privileged
        state: present

    - name: Ensure OperatorGroup exists in openshift-storage namespace
      ansible.builtin.k8s:
        api_version: operators.coreos.com/v1
        kind: OperatorGroup
        metadata:
          name: openshift-storage-operatorgroup
          namespace: openshift-storage
        spec:
          targetNamespaces:
            - openshift-storage
        state: present

    - name: Ensure LVMS Subscription exists
      ansible.builtin.k8s:
        api_version: operators.coreos.com/v1alpha1
        kind: Subscription
        metadata:
          name: lvms
          namespace: openshift-storage
        spec:
          installPlanApproval: Automatic
          name: lvms-operator
          source: redhat-operators
          sourceNamespace: openshift-marketplace
        state: present

    - name: Wait for LVM Storage operator to be installed
      ansible.builtin.k8s_info:
        api_version: operators.coreos.com/v1alpha1
        kind: ClusterServiceVersion
        namespace: openshift-storage
      register: lvm_csv_check
      retries: 10
      delay: 30
      until: "'Succeeded' in lvm_csv_check.resources[0].status.phase"

    - name: Display LVM Storage installation status
      debug:
        var: lvm_csv_check.resources[0].status.phase

    - name: Generate the list of extra disks
      set_fact:
        extra_disks_list: "{{ ['vdb', 'vdc', 'vdd', 'vde', 'vdf', 'vdg', 'vdh', 'vdi', 'vdj', 'vdk'][:extra_disks] }}"

    - name: Display the generated list of extra disks
      debug:
        var: extra_disks_list

    - name: Ensure LVMCluster resource exists
      ansible.builtin.k8s:
        state: present
        definition: |
          apiVersion: lvm.topolvm.io/v1alpha1
          kind: LVMCluster
          metadata:
            name: my-lvmcluster
            namespace: openshift-storage
          spec:
            storage:
              deviceClasses:
              - name: vg1
                fstype: ext4
                default: true
                deviceSelector:
                  paths:
                    {% for device in extra_disks_list %}
                    - /dev/{{ device }}
                    {% endfor %}
                forceWipeDevicesAndDestroyAllData: true
                thinPoolConfig:
                  name: thin-pool-1
                  sizePercent: 90
                  overprovisionRatio: 10
                  chunkSize: 128Ki
                  chunkSizeCalculationPolicy: Static
        namespace: openshift-storage

    - name: Wait for LVMCluster to be in Ready status
      ansible.builtin.k8s_info:
        api_version: lvm.topolvm.io/v1alpha1
        kind: LVMCluster
        namespace: openshift-storage
      register: lvmcluster_status
      retries: 10
      delay: 30
      until: "'Ready' in lvmcluster_status.resources[0].status.phase"

    - name: Ensure PVC exists in default namespace
      ansible.builtin.k8s:
        state: present
        definition: |
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: example-pvc-rwo
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 5Gi
            storageClassName: lvms-vg1
        namespace: default

    - name: Ensure Pod exists in default namespace
      ansible.builtin.k8s:
        state: present
        definition: |
          apiVersion: v1
          kind: Pod
          metadata:
            name: busybox
          spec:
            containers:
              - name: busybox
                image: busybox
                command: [ "/bin/sh", "-c", "while true ; do date; sleep 1; done;" ]
                volumeMounts:
                  - mountPath: /pvc
                    name: pvc
            volumes:
              - name: pvc
                persistentVolumeClaim:
                  claimName: example-pvc-rwo
            restartPolicy: Never
        namespace: default

    - name: Display Pod creation status
      ansible.builtin.k8s_info:
        api_version: v1
        kind: Pod
        namespace: default
      register: pod_info

    - name: Display Pod details
      debug:
        var: pod_info.resources
